#include <vector>

using namespace std;

/****************************************************************
 * 타일맵 (Tilemap)
 *
 * 2차원 평면의 그래프를 정점이 아닌 위치를 통해 표현하는 그래프
 * 위치의 이동가능 유무만을 표현하는 bool 이차원 타일맵
 * 타일의 종류를 표현한 이차원 타일맵이 있음
 * 인접한 이동가능한 위치간 간선이 있으며 가중치는 동일함
 ****************************************************************/

// <타일맵 그래프>
// 예시 - 위치의 이동가능유무를 표현한 이차원 타일맵
vector<vector<bool>> tilemap1 =
{
    { 0, 0, 0, 0, 0, 0, 0 },
    { 0, 1, 0, 1, 0, 0, 0 },
    { 0, 1, 0, 1, 0, 1, 0 },
    { 0, 1, 0, 1, 1, 1, 0 },
    { 0, 1, 0, 1, 0, 0, 0 },
    { 0, 1, 1, 1, 1, 1, 0 },
    { 0, 0, 0, 0, 0, 0, 0 },
};

// 예시 - 타일의 종류를 표현한 이차원 타입맵
vector<vector<char>> tilemap2 =
{
    { '#', '#', '#', '#', '#', '#', '#', '#', '#' },
    { '#', ' ', '#', '#', ' ', ' ', '#', '#', '#' },
    { '#', ' ', '#', '#', ' ', '#', '#', ' ', '#' },
    { '#', ' ', '#', '#', '*', '#', '#', '*', '#' },
    { '#', ' ', '#', ' ', ' ', ' ', ' ', ' ', '#' },
    { '#', ' ', '#', ' ', '#', '#', '#', ' ', '#' },
    { '#', ' ', '#', ' ', '#', '#', '#', ' ', '#' },
    { '#', ' ', ' ', 'S', ' ', ' ', ' ', 'G', '#' },
    { '#', '#', '#', '#', '#', '#', '#', '#', '#' },
};

enum class TileType
{
    None = ' ',
    Wall = '#',
    Door = '*',
    Shop = 'S',
    Gate = 'G',
};