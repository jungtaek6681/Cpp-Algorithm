#include <iostream>
#include <stack>

using namespace std;

/******************************************************
 * 스택 (Stack)
 *
 * 선입후출(FILO), 후입선출(LIFO) 방식의 자료구조
 * 가장 최신 입력된 순서대로 처리해야 하는 상황에 이용
 ******************************************************/

// <스택 구현>
// 배열을 입력순서대로 앞에서부터 채우며 삭제시 가장 마지막 요소를 출력
// 
// - 삽입 -
//         top                      top
//          ↓                        ↓
// ┌─┬─┬─┬─┬─┬─┬─┬─┐      ┌─┬─┬─┬─┬─┬─┬─┬─┐
// │1│2│3│4│5│ │ │ │  =>  │1│2│3│4│5│6│ │ │
// └─┴─┴─┴─┴─┴─┴─┴─┘      └─┴─┴─┴─┴─┴─┴─┴─┘
//
// - 삭제 -
//           top                  top
//            ↓                    ↓
// ┌─┬─┬─┬─┬─┬─┬─┬─┐      ┌─┬─┬─┬─┬─┬─┬─┬─┐
// │1│2│3│4│5│6│ │ │  =>  │1│2│3│4│5│ │ │ │
// └─┴─┴─┴─┴─┴─┴─┴─┘      └─┴─┴─┴─┴─┴─┴─┴─┘


int main()
{
    stack<int> container = stack<int>();

    for (int i = 0; i < 5; i++)
    {
        container.push(i);                  // 입력순서 : 0, 1, 2, 3, 4
    }

    for (int i = 0; i < 3; i++)
    {
        cout << container.top() << endl;    // 출력순서 : 4, 3, 2
        container.pop();
    }

    for (int i = 5; i < 10; i++)
    {
        container.push(i);                  // 입력순서 : 5, 6, 7, 8, 9
    }

    while (container.size() > 0)
    {
        cout << container.top() << endl;    // 출력순서 : 9, 8, 7, 6, 5, 1, 0
        container.pop();
    }
}